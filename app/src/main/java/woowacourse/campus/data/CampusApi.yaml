openapi: 3.0.3
info:
  title: 캠퍼스 플랫폼 API 문서
  description: 캠퍼스 플랫폼 API 문서입니다.
  contact:
    email: woowa@woowanet.com
  version: 1.0.0
servers:
  - url: https://api.test.com
tags:
  - name: CreateAnnouncement
    description: 공지사항 생성
  - name: GetAllAnnouncement
    description: 공지사항 전체 조회
  - name: GetAnnouncement
    description: 공지사항 단일 조회
  - name: UpdateAnnouncement
    description: 공지사항 수정
  - name: DeleteAnnouncement
    description: 공지사항 삭제
paths:
  /api/announcements:
    post:
      operationId: createAnnouncement
      tags:
        - CreateAnnouncement
      summary: 공지 생성
      description: 사용자가 공지를 생성한다.
      parameters:
        - in: header
          name: Authorization
          schema:
            type: string
            example: 'Basic {token}'
          required: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createAnnouncementRequest'
      responses:
        201:
          description: Created
          headers:
            Location:
              schema:
                type: string
                example: '/api/announcements/1'
        401:
          description: Unauthorized
        400:
          description: Bad Request
    get:
      operationId: findAllAnnouncementByPage
      tags:
        - GetAllAnnouncement
      summary: 공지 전체 조회(페이징)
      description: 사용자가 공지를 전체 조회한다.
      parameters:
        - in: query
          name: page
          schema:
            type: integer
            example: 0
            default: 0
          required: false
          description: 페이지 번호
        - in: query
          name: size
          schema:
            type: integer
            example: 10
            default: 10
          required: false
          description: 게시글 개수
        - in: header
          name: Authorization
          schema:
            type: string
            example: 'Basic {token}'
          required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/announcementsByPageResponse'
        401:
          description: Unauthorized
        400:
          description: Bad Request
  /api/announcements/{id}:
    parameters:
      - in: path
        name: id
        schema:
          type: integer
          example: 1
        required: true
        description: 공지사항 ID
    put:
      operationId: updateAnnouncement
      tags:
        - UpdateAnnouncement
      summary: 공지 수정
      description: 사용자가 공지를 수정한다.
      parameters:
        - in: header
          name: Authorization
          schema:
            type: string
            example: 'Basic {token}'
          required: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateAnnouncementRequest'
      responses:
        200:
          description: OK
        401:
          description: Unauthorized
        400:
          description: Bad Request
    delete:
      operationId: deleteAnnouncement
      tags:
        - DeleteAnnouncement
      summary: 공지 삭제
      description: 사용자가 공지를 삭제한다
      parameters:
        - in: header
          name: Authorization
          schema:
            type: string
            example: 'Basic {token}'
          required: true
      responses:
        204:
          description: No Content
        401:
          description: Unauthorized
        400:
          description: Bad Request
    get:
      operationId: findAnnouncementById
      tags:
        - GetAnnouncement
      summary: 공지 조회
      description: 사용자가 공지를 조회한다.
      parameters:
        - in: header
          name: Authorization
          schema:
            type: string
            example: 'Basic {token}'
          required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/announcementResponse'
        401:
          description: Unauthorized
        400:
          description: Bad Request

components:
  schemas:
    createAnnouncementRequest:
      type: object
      properties:
        title:
          type: string
          example: '제목'
          nullable: false
          minLength: 1
          maxLength: 50
        content:
          type: string
          example: '내용'
          nullable: false
          minLength: 1
          maxLength: 65535
        author:
          type: string
          example: '작성자'
          nullable: false
          minLength: 1
          maxLength: 20
        slackChannel:
          type: object
          properties:
            channelId:
              type: integer
              example: 1
              nullable: false
            channelName:
              type: string
              example: '#5기-캠플폼-잡담'
              nullable: false
              minLength: 1
              maxLength: 50
          required:
            - channelId
            - channelName
      required:
        - title
        - content
        - author
        - slackChannel
    updateAnnouncementRequest:
      type: object
      properties:
        title:
          type: string
          example: '제목'
          nullable: false
          minLength: 1
          maxLength: 50
        content:
          type: string
          example: '내용'
          nullable: false
          minLength: 1
          maxLength: 65535
        author:
          type: string
          example: '작성자'
          nullable: false
          minLength: 1
          maxLength: 20
          description: '원본 공지와 작성자가 같아야합니다.'
        slackChannel:
          type: object
          properties:
            channelId:
              type: string
              example: 'C01RZGZQZ9K'
              nullable: false
              minLength: 1
              maxLength: 50
            channelName:
              type: string
              example: '#5기-캠플폼-잡담'
              nullable: false
              minLength: 1
              maxLength: 50
      required:
        - title
        - content
        - author
        - slackChannel
    announcementResponse:
      type: object
      properties:
        id:
          type: integer
          example: 1
        title:
          type: string
          example: '제목'
          nullable: false
        content:
          type: string
          example: '내용'
          nullable: false
        author:
          type: string
          example: '작성자'
          nullable: false
        createdAt:
          type: string
          example: '2021-08-01T00:00:00.000'
      required:
        - id
        - title
        - content
        - author
        - createdAt
    announcementsByPageResponse:
      type: object
      properties:
        announcements:
          type: array
          items:
            $ref: '#/components/schemas/announcementPageResponse'
        page:
          type: integer
          example: 0
        size:
          type: integer
          example: 10
        totalElements:
          type: integer
          example: 1
        totalPages:
          type: integer
          example: 1
      required:
        - announcements
        - page
        - size
        - totalElements
        - totalPages
    announcementPageResponse:
      type: object
      properties:
        id:
          type: integer
          example: 1
        title:
          type: string
          example: '제목'
          nullable: false
        author:
          type: string
          example: '작성자'
          nullable: false
        createdAt:
          type: string
          example: '2021-08-01T00:00:00.000'
      required:
        - id
        - title
        - author
        - createdAt